/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JFrame.java to edit this template
 */
package com.itson.proyectobancobda;

import com.itson.proyectobancobdadominio.Cliente;
import com.itson.proyectobancobdapersistencia.daos.IClientesDAO;
import com.itson.proyectobancobdapersistencia.daos.ICuentasDAO;
import com.itson.proyectobancobdapersistencia.dtos.CuentaNuevaDTO;
import com.itson.proyectobancobdapersistencia.excepciones.PersistenciaException;
import com.itson.proyectobancobdapersistencia.excepciones.ValidacionDTOException;
import java.sql.Date;
import java.util.Random;
import javax.swing.JOptionPane;

/**
 *
 * @author gamaliel
 */
public class CuentaNuevaForm extends javax.swing.JFrame {

    /**
     * Creates new form CuentaNuevaForm
     */
    
    private final IClientesDAO clientesDAO;    
    private ICuentasDAO cuentasDAO;    
    private final Cliente cliente;    
    public CuentaNuevaForm(IClientesDAO clientesDAO, Cliente cliente) {
        initComponents();
        this.clientesDAO = clientesDAO;
        this.cliente = cliente;
    }

    private void generarCuentaAleatoria(){
        Random random = new Random();
        StringBuilder sb = new StringBuilder("4169");
        while (sb.length() < 16) {
            sb.append(random.nextInt(10));
        }
        String numCuenta = sb.toString();
        lblNumeroCuenta.setText(numCuenta);
    }

    private void guardar(){
        String numCuenta = lblNumeroCuenta.getText();
        Double saldo = 0.0;
        Date fechaApertura = new Date(System.currentTimeMillis());
        Long idCliente = this.cliente.getId();

        Cliente cliente = this.cliente; // Asegúrate de que cliente tenga un valor asignado antes de invocar el método guardar()
        if (cliente == null) {
            JOptionPane.showMessageDialog(this, "Debe seleccionar un cliente", "Error de Validación", JOptionPane.ERROR_MESSAGE);
            return;
        }
    
        CuentaNuevaDTO cuentaNueva = new CuentaNuevaDTO();

        cuentaNueva.setNumCuenta(numCuenta);
        cuentaNueva.setSaldoPesos(saldo);
        cuentaNueva.setFechaApertura(fechaApertura);
        cuentaNueva.setIdCliente(idCliente);

        try {
            cuentaNueva.esValido();
            this.cuentasDAO.agregar(cuentaNueva);
            JOptionPane.showMessageDialog(this, "Cliente Agregado");
        } catch (ValidacionDTOException ex) {
            JOptionPane.showMessageDialog(this, 
                                            ex.getMessage(), 
                                            "Error de Validación", 
                                            JOptionPane.ERROR_MESSAGE);
        }catch(PersistenciaException ex){
            JOptionPane.showMessageDialog(this,
                                            "No fue posible agregar al socio", 
                                            "Error de Almacenamiento",
                                            JOptionPane.ERROR_MESSAGE);  
        }
    }
    
    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jLabel1 = new javax.swing.JLabel();
        lblNumeroCuenta = new javax.swing.JLabel();
        btnCrear = new javax.swing.JButton();
        btnGenerar = new javax.swing.JButton();
        btnRegresar = new javax.swing.JButton();
        txtSaldoPesos = new javax.swing.JTextField();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        jLabel1.setText("Numero cuenta");

        lblNumeroCuenta.setText("jLabel2");

        btnCrear.setText("Crear");
        btnCrear.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnCrearActionPerformed(evt);
            }
        });

        btnGenerar.setText("Generar");
        btnGenerar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnGenerarActionPerformed(evt);
            }
        });

        btnRegresar.setText("Regresar");

        txtSaldoPesos.setText("jTextField1");

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(123, 123, 123)
                .addComponent(jLabel1)
                .addGap(196, 196, 196)
                .addComponent(lblNumeroCuenta)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addContainerGap(115, Short.MAX_VALUE)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                        .addComponent(btnRegresar)
                        .addGap(107, 107, 107)
                        .addComponent(btnGenerar)
                        .addGap(116, 116, 116)
                        .addComponent(btnCrear)
                        .addGap(96, 96, 96))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                        .addComponent(txtSaldoPesos, javax.swing.GroupLayout.PREFERRED_SIZE, 177, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(128, 128, 128))))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(138, 138, 138)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel1)
                    .addComponent(lblNumeroCuenta))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 120, Short.MAX_VALUE)
                .addComponent(txtSaldoPesos, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(99, 99, 99)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(btnCrear)
                    .addComponent(btnGenerar)
                    .addComponent(btnRegresar))
                .addGap(54, 54, 54))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void btnGenerarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnGenerarActionPerformed
        generarCuentaAleatoria();
    }//GEN-LAST:event_btnGenerarActionPerformed

    private void btnCrearActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnCrearActionPerformed
        guardar();
    }//GEN-LAST:event_btnCrearActionPerformed


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnCrear;
    private javax.swing.JButton btnGenerar;
    private javax.swing.JButton btnRegresar;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel lblNumeroCuenta;
    private javax.swing.JTextField txtSaldoPesos;
    // End of variables declaration//GEN-END:variables
}
